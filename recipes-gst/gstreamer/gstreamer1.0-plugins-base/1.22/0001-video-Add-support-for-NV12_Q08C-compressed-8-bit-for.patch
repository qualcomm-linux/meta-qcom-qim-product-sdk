From 2af5a108d2e8ed7afe2762d59bff8c4bb3683fc9 Mon Sep 17 00:00:00 2001
From: Pratik Pachange <quic_ppachang@quicinc.com>
Date: Sat, 4 Jan 2025 12:29:20 +0530
Subject: [PATCH] video: Add support for NV12_Q08C (compressed 8-bit) format

Upstream-Status: Inappropriate [Qualcomm specific]

Signed-off-by: Pratik Pachange <quic_ppachang@quicinc.com>
---
 gst-libs/gst/video/video-format.c | 25 ++++++++++++++++++++++++-
 gst-libs/gst/video/video-format.h | 12 ++++++++++--
 gst-libs/gst/video/video-info.c   | 23 +++++++++++++++++++++++
 gst-libs/gst/video/video-scaler.c |  1 +
 4 files changed, 58 insertions(+), 3 deletions(-)

diff --git a/gst-libs/gst/video/video-format.c b/gst-libs/gst/video/video-format.c
index d869f9a..e7da2f0 100644
--- a/gst-libs/gst/video/video-format.c
+++ b/gst-libs/gst/video/video-format.c
@@ -1723,6 +1723,25 @@ unpack_NV21 (const GstVideoFormatInfo * info, GstVideoPackFlags flags,
   }
 }
 
+#define PACK_NV12_Q08C GST_VIDEO_FORMAT_NV12, unpack_NV12_Q08C, 1, pack_NV12_Q08C
+static void
+unpack_NV12_Q08C (const GstVideoFormatInfo * info, GstVideoPackFlags flags,
+    gpointer dest, const gpointer data[GST_VIDEO_MAX_PLANES],
+    const gint stride[GST_VIDEO_MAX_PLANES], gint x, gint y, gint width)
+{
+  GST_FIXME ("Unpack NV12_Q08C is not yet supported.");
+}
+
+static void
+pack_NV12_Q08C (const GstVideoFormatInfo * info, GstVideoPackFlags flags,
+    const gpointer src, gint sstride, gpointer data[GST_VIDEO_MAX_PLANES],
+    const gint stride[GST_VIDEO_MAX_PLANES], GstVideoChromaSite chroma_site,
+    gint y, gint width)
+{
+  GST_FIXME ("Pack NV12_Q08C is not yet supported.");
+}
+
+
 #define PACK_AV12 GST_VIDEO_FORMAT_AYUV, unpack_AV12, 1, pack_AV12
 static void
 unpack_AV12 (const GstVideoFormatInfo * info, GstVideoPackFlags flags,
@@ -7293,6 +7312,9 @@ static const VideoFormat formats[] = {
   MAKE_YUV_T_FORMAT (NV12_10BE_8L128, "raw video",
       GST_MAKE_FOURCC ('N', 'T', '1', '2'), DPTH10_10_10, PSTR0, PLANE011,
       OFFS001, SUB420, PACK_NV12_10BE_8L128, TILE_10bit_8x128 (LINEAR)),
+  MAKE_YUV_FORMAT (NV12_Q08C, "raw video",
+      GST_MAKE_FOURCC ('Q', '0', '8', 'C'), DPTH888, PSTR122, PLANE011,
+      OFFS001, SUB420, PACK_NV12_Q08C),
 };
 
 G_GNUC_END_IGNORE_DEPRECATIONS;
@@ -7553,7 +7575,8 @@ gst_video_format_from_fourcc (guint32 fourcc)
       return GST_VIDEO_FORMAT_VUYA;
     case GST_MAKE_FOURCC ('A', 'R', '3', '0'):
       return GST_VIDEO_FORMAT_BGR10A2_LE;
-
+    case GST_MAKE_FOURCC ('Q', '0', '8', 'C'):
+      return GST_VIDEO_FORMAT_NV12_Q08C;
     default:
       return GST_VIDEO_FORMAT_UNKNOWN;
   }
diff --git a/gst-libs/gst/video/video-format.h b/gst-libs/gst/video/video-format.h
index 7a645cc..9a50b3f 100644
--- a/gst-libs/gst/video/video-format.h
+++ b/gst-libs/gst/video/video-format.h
@@ -145,6 +145,7 @@ G_BEGIN_DECLS
  * @GST_VIDEO_FORMAT_NV12_16L32S: NV12 with 16x32 Y tiles and 16x16 UV tiles. (Since: 1.22)
  * @GST_VIDEO_FORMAT_NV12_8L128 : NV12 with 8x128 tiles in linear order (Since: 1.22)
  * @GST_VIDEO_FORMAT_NV12_10BE_8L128 : NV12 10bit big endian with 8x128 tiles in linear order (Since: 1.22)
+ * @GST_VIDEO_FORMAT_NV12_Q08C: Qualcomm NV12 8bit compressed format
  *
  * Enum value describing the most common video formats.
  *
@@ -400,6 +401,13 @@ typedef enum {
    * Since: 1.22
    */
   GST_VIDEO_FORMAT_NV12_10BE_8L128,
+
+  /**
+   * GST_VIDEO_FORMAT_NV12_Q08C:
+   *
+   * Qualcomm NV12 8-bit compressed format.
+   */
+  GST_VIDEO_FORMAT_NV12_Q08C,
 } GstVideoFormat;
 
 #define GST_VIDEO_MAX_PLANES 4
@@ -877,7 +885,7 @@ gconstpointer  gst_video_format_get_palette          (GstVideoFormat format, gsi
     "P010_10BE, P010_10LE, NV12_10LE32, NV12_10LE40, NV12_10BE_8L128, Y444, RGBP, GBR, BGRP, NV24, xBGR, BGRx, " \
     "xRGB, RGBx, BGR, IYU2, v308, RGB, Y42B, NV61, NV16, VYUY, UYVY, YVYU, YUY2, I420, " \
     "YV12, NV21, NV12, NV12_8L128, NV12_64Z32, NV12_4L4, NV12_32L32, NV12_16L32S, Y41B, IYU1, YVU9, YUV9, RGB16, " \
-    "BGR16, RGB15, BGR15, RGB8P, GRAY16_BE, GRAY16_LE, GRAY10_LE32, GRAY8 }"
+    "BGR16, RGB15, BGR15, RGB8P, GRAY16_BE, GRAY16_LE, GRAY10_LE32, GRAY8, NV12_Q08C }"
 #elif G_BYTE_ORDER == G_LITTLE_ENDIAN
 #define GST_VIDEO_FORMATS_ALL "{ ABGR64_LE, BGRA64_LE, AYUV64, ARGB64_LE, ARGB64, " \
     "RGBA64_LE, ABGR64_BE, BGRA64_BE, ARGB64_BE, RGBA64_BE, GBRA_12LE, GBRA_12BE, Y412_LE, " \
@@ -890,7 +898,7 @@ gconstpointer  gst_video_format_get_palette          (GstVideoFormat format, gsi
     "P010_10LE, NV12_10LE32, NV12_10LE40, P010_10BE, NV12_10BE_8L128, Y444, RGBP, GBR, BGRP, NV24, xBGR, BGRx, " \
     "xRGB, RGBx, BGR, IYU2, v308, RGB, Y42B, NV61, NV16, VYUY, UYVY, YVYU, YUY2, I420, " \
     "YV12, NV21, NV12, NV12_8L128, NV12_64Z32, NV12_4L4, NV12_32L32, NV12_16L32S, Y41B, IYU1, YVU9, YUV9, RGB16, " \
-    "BGR16, RGB15, BGR15, RGB8P, GRAY16_LE, GRAY16_BE, GRAY10_LE32, GRAY8 }"
+    "BGR16, RGB15, BGR15, RGB8P, GRAY16_LE, GRAY16_BE, GRAY10_LE32, GRAY8, NV12_Q08C }"
 #endif
 
 GST_VIDEO_API
diff --git a/gst-libs/gst/video/video-info.c b/gst-libs/gst/video/video-info.c
index eaca27a..a49895e 100644
--- a/gst-libs/gst/video/video-info.c
+++ b/gst-libs/gst/video/video-info.c
@@ -1266,6 +1266,29 @@ fill_planes (GstVideoInfo * info, gsize plane_size[GST_VIDEO_MAX_PLANES])
       info->size = info->offset[1] + n_tile_x * uv_n_tile_y * tile_size;
       break;
     }
+    case GST_VIDEO_FORMAT_NV12_Q08C:
+    {
+      gint meta_width = 0, meta_height = 0;
+      gint luma_meta_size = 0, chroma_meta_size = 0;
+
+      /* metadata size for Luma */
+      meta_width = GST_ROUND_UP_64 (width >> 5);
+      meta_height = GST_ROUND_UP_16 (height >> 3);
+      luma_meta_size =  GST_ROUND_UP_N (meta_width * meta_height, 4096);
+
+      /* height changes for chroma */
+      meta_height = GST_ROUND_UP_16 (((height + 1) >> 1) >> 3);
+      chroma_meta_size = GST_ROUND_UP_N (meta_width * meta_height, 4096);
+
+      info->stride[0] = GST_ROUND_UP_128 (width);
+      info->stride[1] = info->stride[0];
+      info->offset[0] = 0;
+      info->offset[1] = luma_meta_size +
+          info->stride[0] * GST_ROUND_UP_32 (height);
+      info->size = info->offset[1] + chroma_meta_size +
+          info->stride[0] * GST_ROUND_UP_32 (height >> 1);
+      break;
+    }
     case GST_VIDEO_FORMAT_ENCODED:
       break;
     case GST_VIDEO_FORMAT_UNKNOWN:
diff --git a/gst-libs/gst/video/video-scaler.c b/gst-libs/gst/video/video-scaler.c
index fd76da7..b683011 100644
--- a/gst-libs/gst/video/video-scaler.c
+++ b/gst-libs/gst/video/video-scaler.c
@@ -1262,6 +1262,7 @@ get_functions (GstVideoScaler * hscale, GstVideoScaler * vscale,
     case GST_VIDEO_FORMAT_NV21:
     case GST_VIDEO_FORMAT_NV24:
     case GST_VIDEO_FORMAT_NV61:
+    case GST_VIDEO_FORMAT_NV12_Q08C:
       *bits = 8;
       *n_elems = 2;
       break;
